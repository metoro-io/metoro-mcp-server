/*
Metoro Alerts API

API for managing alerts in the Metoro observability platform.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package model

import (
	"encoding/json"
)

// checks if the TimeseriesSpecifierFiltersInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TimeseriesSpecifierFiltersInner{}

// TimeseriesSpecifierFiltersInner struct for TimeseriesSpecifierFiltersInner
type TimeseriesSpecifierFiltersInner struct {
	// Filter key
	Key *string `json:"key,omitempty"`
	// Filter values
	Value []string `json:"value,omitempty"`
	// Filter operator
	Operator *string `json:"operator,omitempty"`
}

// NewTimeseriesSpecifierFiltersInner instantiates a new TimeseriesSpecifierFiltersInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTimeseriesSpecifierFiltersInner() *TimeseriesSpecifierFiltersInner {
	this := TimeseriesSpecifierFiltersInner{}
	return &this
}

// NewTimeseriesSpecifierFiltersInnerWithDefaults instantiates a new TimeseriesSpecifierFiltersInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTimeseriesSpecifierFiltersInnerWithDefaults() *TimeseriesSpecifierFiltersInner {
	this := TimeseriesSpecifierFiltersInner{}
	return &this
}

// GetKey returns the Key field value if set, zero value otherwise.
func (o *TimeseriesSpecifierFiltersInner) GetKey() string {
	if o == nil || IsNil(o.Key) {
		var ret string
		return ret
	}
	return *o.Key
}

// GetKeyOk returns a tuple with the Key field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TimeseriesSpecifierFiltersInner) GetKeyOk() (*string, bool) {
	if o == nil || IsNil(o.Key) {
		return nil, false
	}
	return o.Key, true
}

// HasKey returns a boolean if a field has been set.
func (o *TimeseriesSpecifierFiltersInner) HasKey() bool {
	if o != nil && !IsNil(o.Key) {
		return true
	}

	return false
}

// SetKey gets a reference to the given string and assigns it to the Key field.
func (o *TimeseriesSpecifierFiltersInner) SetKey(v string) {
	o.Key = &v
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *TimeseriesSpecifierFiltersInner) GetValue() []string {
	if o == nil || IsNil(o.Value) {
		var ret []string
		return ret
	}
	return o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TimeseriesSpecifierFiltersInner) GetValueOk() ([]string, bool) {
	if o == nil || IsNil(o.Value) {
		return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *TimeseriesSpecifierFiltersInner) HasValue() bool {
	if o != nil && !IsNil(o.Value) {
		return true
	}

	return false
}

// SetValue gets a reference to the given []string and assigns it to the Value field.
func (o *TimeseriesSpecifierFiltersInner) SetValue(v []string) {
	o.Value = v
}

// GetOperator returns the Operator field value if set, zero value otherwise.
func (o *TimeseriesSpecifierFiltersInner) GetOperator() string {
	if o == nil || IsNil(o.Operator) {
		var ret string
		return ret
	}
	return *o.Operator
}

// GetOperatorOk returns a tuple with the Operator field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TimeseriesSpecifierFiltersInner) GetOperatorOk() (*string, bool) {
	if o == nil || IsNil(o.Operator) {
		return nil, false
	}
	return o.Operator, true
}

// HasOperator returns a boolean if a field has been set.
func (o *TimeseriesSpecifierFiltersInner) HasOperator() bool {
	if o != nil && !IsNil(o.Operator) {
		return true
	}

	return false
}

// SetOperator gets a reference to the given string and assigns it to the Operator field.
func (o *TimeseriesSpecifierFiltersInner) SetOperator(v string) {
	o.Operator = &v
}

func (o TimeseriesSpecifierFiltersInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TimeseriesSpecifierFiltersInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Key) {
		toSerialize["key"] = o.Key
	}
	if !IsNil(o.Value) {
		toSerialize["value"] = o.Value
	}
	if !IsNil(o.Operator) {
		toSerialize["operator"] = o.Operator
	}
	return toSerialize, nil
}

type NullableTimeseriesSpecifierFiltersInner struct {
	value *TimeseriesSpecifierFiltersInner
	isSet bool
}

func (v NullableTimeseriesSpecifierFiltersInner) Get() *TimeseriesSpecifierFiltersInner {
	return v.value
}

func (v *NullableTimeseriesSpecifierFiltersInner) Set(val *TimeseriesSpecifierFiltersInner) {
	v.value = val
	v.isSet = true
}

func (v NullableTimeseriesSpecifierFiltersInner) IsSet() bool {
	return v.isSet
}

func (v *NullableTimeseriesSpecifierFiltersInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTimeseriesSpecifierFiltersInner(val *TimeseriesSpecifierFiltersInner) *NullableTimeseriesSpecifierFiltersInner {
	return &NullableTimeseriesSpecifierFiltersInner{value: val, isSet: true}
}

func (v NullableTimeseriesSpecifierFiltersInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTimeseriesSpecifierFiltersInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


