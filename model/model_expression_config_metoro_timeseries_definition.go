/*
Metoro Alerts API

API for managing alerts in the Metoro observability platform.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package model

import (
	"encoding/json"
)

// checks if the ExpressionConfigMetoroTimeseriesDefinition type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ExpressionConfigMetoroTimeseriesDefinition{}

// ExpressionConfigMetoroTimeseriesDefinition Metoro-specific timeseries definition
type ExpressionConfigMetoroTimeseriesDefinition struct {
	// List of timeseries specifiers
	TimeseriesSpecifiers []TimeseriesSpecifier `json:"timeseriesSpecifiers,omitempty"`
	// A formula to combine multiple timeseries
	Formula *string `json:"formula,omitempty"`
}

// NewExpressionConfigMetoroTimeseriesDefinition instantiates a new ExpressionConfigMetoroTimeseriesDefinition object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewExpressionConfigMetoroTimeseriesDefinition() *ExpressionConfigMetoroTimeseriesDefinition {
	this := ExpressionConfigMetoroTimeseriesDefinition{}
	return &this
}

// NewExpressionConfigMetoroTimeseriesDefinitionWithDefaults instantiates a new ExpressionConfigMetoroTimeseriesDefinition object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewExpressionConfigMetoroTimeseriesDefinitionWithDefaults() *ExpressionConfigMetoroTimeseriesDefinition {
	this := ExpressionConfigMetoroTimeseriesDefinition{}
	return &this
}

// GetTimeseriesSpecifiers returns the TimeseriesSpecifiers field value if set, zero value otherwise.
func (o *ExpressionConfigMetoroTimeseriesDefinition) GetTimeseriesSpecifiers() []TimeseriesSpecifier {
	if o == nil || IsNil(o.TimeseriesSpecifiers) {
		var ret []TimeseriesSpecifier
		return ret
	}
	return o.TimeseriesSpecifiers
}

// GetTimeseriesSpecifiersOk returns a tuple with the TimeseriesSpecifiers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExpressionConfigMetoroTimeseriesDefinition) GetTimeseriesSpecifiersOk() ([]TimeseriesSpecifier, bool) {
	if o == nil || IsNil(o.TimeseriesSpecifiers) {
		return nil, false
	}
	return o.TimeseriesSpecifiers, true
}

// HasTimeseriesSpecifiers returns a boolean if a field has been set.
func (o *ExpressionConfigMetoroTimeseriesDefinition) HasTimeseriesSpecifiers() bool {
	if o != nil && !IsNil(o.TimeseriesSpecifiers) {
		return true
	}

	return false
}

// SetTimeseriesSpecifiers gets a reference to the given []TimeseriesSpecifier and assigns it to the TimeseriesSpecifiers field.
func (o *ExpressionConfigMetoroTimeseriesDefinition) SetTimeseriesSpecifiers(v []TimeseriesSpecifier) {
	o.TimeseriesSpecifiers = v
}

// GetFormula returns the Formula field value if set, zero value otherwise.
func (o *ExpressionConfigMetoroTimeseriesDefinition) GetFormula() string {
	if o == nil || IsNil(o.Formula) {
		var ret string
		return ret
	}
	return *o.Formula
}

// GetFormulaOk returns a tuple with the Formula field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExpressionConfigMetoroTimeseriesDefinition) GetFormulaOk() (*string, bool) {
	if o == nil || IsNil(o.Formula) {
		return nil, false
	}
	return o.Formula, true
}

// HasFormula returns a boolean if a field has been set.
func (o *ExpressionConfigMetoroTimeseriesDefinition) HasFormula() bool {
	if o != nil && !IsNil(o.Formula) {
		return true
	}

	return false
}

// SetFormula gets a reference to the given string and assigns it to the Formula field.
func (o *ExpressionConfigMetoroTimeseriesDefinition) SetFormula(v string) {
	o.Formula = &v
}

func (o ExpressionConfigMetoroTimeseriesDefinition) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ExpressionConfigMetoroTimeseriesDefinition) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.TimeseriesSpecifiers) {
		toSerialize["timeseriesSpecifiers"] = o.TimeseriesSpecifiers
	}
	if !IsNil(o.Formula) {
		toSerialize["formula"] = o.Formula
	}
	return toSerialize, nil
}

type NullableExpressionConfigMetoroTimeseriesDefinition struct {
	value *ExpressionConfigMetoroTimeseriesDefinition
	isSet bool
}

func (v NullableExpressionConfigMetoroTimeseriesDefinition) Get() *ExpressionConfigMetoroTimeseriesDefinition {
	return v.value
}

func (v *NullableExpressionConfigMetoroTimeseriesDefinition) Set(val *ExpressionConfigMetoroTimeseriesDefinition) {
	v.value = val
	v.isSet = true
}

func (v NullableExpressionConfigMetoroTimeseriesDefinition) IsSet() bool {
	return v.isSet
}

func (v *NullableExpressionConfigMetoroTimeseriesDefinition) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableExpressionConfigMetoroTimeseriesDefinition(val *ExpressionConfigMetoroTimeseriesDefinition) *NullableExpressionConfigMetoroTimeseriesDefinition {
	return &NullableExpressionConfigMetoroTimeseriesDefinition{value: val, isSet: true}
}

func (v NullableExpressionConfigMetoroTimeseriesDefinition) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableExpressionConfigMetoroTimeseriesDefinition) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


