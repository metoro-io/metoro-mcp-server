/*
Metoro API

API for managing Metoro environments, alerts, and dashboards.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package model

import (
	"encoding/json"
)

// checks if the ActionWebhookDestination type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ActionWebhookDestination{}

// ActionWebhookDestination struct for ActionWebhookDestination
type ActionWebhookDestination struct {
	// UUID of the webhook configuration to use for notifying that the alert is triggered
	Uuid *string `json:"uuid,omitempty"`
	// Name of the webhook configuration to use for notifying that the alert is triggered
	Name *string `json:"name,omitempty"`
	// UUID of the webhook configuration to use for notifying that the alert is resolved
	ResolvedUuid *string `json:"resolved_uuid,omitempty"`
	// Name of the webhook configuration to use for notifying that the alert is resolved
	ResolvedName *string `json:"resolved_name,omitempty"`
}

// NewActionWebhookDestination instantiates a new ActionWebhookDestination object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewActionWebhookDestination() *ActionWebhookDestination {
	this := ActionWebhookDestination{}
	return &this
}

// NewActionWebhookDestinationWithDefaults instantiates a new ActionWebhookDestination object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewActionWebhookDestinationWithDefaults() *ActionWebhookDestination {
	this := ActionWebhookDestination{}
	return &this
}

// GetUuid returns the Uuid field value if set, zero value otherwise.
func (o *ActionWebhookDestination) GetUuid() string {
	if o == nil || IsNil(o.Uuid) {
		var ret string
		return ret
	}
	return *o.Uuid
}

// GetUuidOk returns a tuple with the Uuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActionWebhookDestination) GetUuidOk() (*string, bool) {
	if o == nil || IsNil(o.Uuid) {
		return nil, false
	}
	return o.Uuid, true
}

// HasUuid returns a boolean if a field has been set.
func (o *ActionWebhookDestination) HasUuid() bool {
	if o != nil && !IsNil(o.Uuid) {
		return true
	}

	return false
}

// SetUuid gets a reference to the given string and assigns it to the Uuid field.
func (o *ActionWebhookDestination) SetUuid(v string) {
	o.Uuid = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ActionWebhookDestination) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActionWebhookDestination) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ActionWebhookDestination) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ActionWebhookDestination) SetName(v string) {
	o.Name = &v
}

// GetResolvedUuid returns the ResolvedUuid field value if set, zero value otherwise.
func (o *ActionWebhookDestination) GetResolvedUuid() string {
	if o == nil || IsNil(o.ResolvedUuid) {
		var ret string
		return ret
	}
	return *o.ResolvedUuid
}

// GetResolvedUuidOk returns a tuple with the ResolvedUuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActionWebhookDestination) GetResolvedUuidOk() (*string, bool) {
	if o == nil || IsNil(o.ResolvedUuid) {
		return nil, false
	}
	return o.ResolvedUuid, true
}

// HasResolvedUuid returns a boolean if a field has been set.
func (o *ActionWebhookDestination) HasResolvedUuid() bool {
	if o != nil && !IsNil(o.ResolvedUuid) {
		return true
	}

	return false
}

// SetResolvedUuid gets a reference to the given string and assigns it to the ResolvedUuid field.
func (o *ActionWebhookDestination) SetResolvedUuid(v string) {
	o.ResolvedUuid = &v
}

// GetResolvedName returns the ResolvedName field value if set, zero value otherwise.
func (o *ActionWebhookDestination) GetResolvedName() string {
	if o == nil || IsNil(o.ResolvedName) {
		var ret string
		return ret
	}
	return *o.ResolvedName
}

// GetResolvedNameOk returns a tuple with the ResolvedName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActionWebhookDestination) GetResolvedNameOk() (*string, bool) {
	if o == nil || IsNil(o.ResolvedName) {
		return nil, false
	}
	return o.ResolvedName, true
}

// HasResolvedName returns a boolean if a field has been set.
func (o *ActionWebhookDestination) HasResolvedName() bool {
	if o != nil && !IsNil(o.ResolvedName) {
		return true
	}

	return false
}

// SetResolvedName gets a reference to the given string and assigns it to the ResolvedName field.
func (o *ActionWebhookDestination) SetResolvedName(v string) {
	o.ResolvedName = &v
}

func (o ActionWebhookDestination) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ActionWebhookDestination) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Uuid) {
		toSerialize["uuid"] = o.Uuid
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.ResolvedUuid) {
		toSerialize["resolved_uuid"] = o.ResolvedUuid
	}
	if !IsNil(o.ResolvedName) {
		toSerialize["resolved_name"] = o.ResolvedName
	}
	return toSerialize, nil
}

type NullableActionWebhookDestination struct {
	value *ActionWebhookDestination
	isSet bool
}

func (v NullableActionWebhookDestination) Get() *ActionWebhookDestination {
	return v.value
}

func (v *NullableActionWebhookDestination) Set(val *ActionWebhookDestination) {
	v.value = val
	v.isSet = true
}

func (v NullableActionWebhookDestination) IsSet() bool {
	return v.isSet
}

func (v *NullableActionWebhookDestination) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableActionWebhookDestination(val *ActionWebhookDestination) *NullableActionWebhookDestination {
	return &NullableActionWebhookDestination{value: val, isSet: true}
}

func (v NullableActionWebhookDestination) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableActionWebhookDestination) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


