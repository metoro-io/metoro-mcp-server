/*
Metoro Alerts API

API for managing alerts in the Metoro observability platform.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package model

import (
	"encoding/json"
)

// checks if the TimeseriesSpecifierFunctions type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TimeseriesSpecifierFunctions{}

// TimeseriesSpecifierFunctions Functions to apply to the timeseries
type TimeseriesSpecifierFunctions struct {
	// Type of function to apply
	FunctionType *string `json:"functionType,omitempty"`
	MathExpression *TimeseriesSpecifierFunctionsMathExpression `json:"mathExpression,omitempty"`
}

// NewTimeseriesSpecifierFunctions instantiates a new TimeseriesSpecifierFunctions object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTimeseriesSpecifierFunctions() *TimeseriesSpecifierFunctions {
	this := TimeseriesSpecifierFunctions{}
	return &this
}

// NewTimeseriesSpecifierFunctionsWithDefaults instantiates a new TimeseriesSpecifierFunctions object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTimeseriesSpecifierFunctionsWithDefaults() *TimeseriesSpecifierFunctions {
	this := TimeseriesSpecifierFunctions{}
	return &this
}

// GetFunctionType returns the FunctionType field value if set, zero value otherwise.
func (o *TimeseriesSpecifierFunctions) GetFunctionType() string {
	if o == nil || IsNil(o.FunctionType) {
		var ret string
		return ret
	}
	return *o.FunctionType
}

// GetFunctionTypeOk returns a tuple with the FunctionType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TimeseriesSpecifierFunctions) GetFunctionTypeOk() (*string, bool) {
	if o == nil || IsNil(o.FunctionType) {
		return nil, false
	}
	return o.FunctionType, true
}

// HasFunctionType returns a boolean if a field has been set.
func (o *TimeseriesSpecifierFunctions) HasFunctionType() bool {
	if o != nil && !IsNil(o.FunctionType) {
		return true
	}

	return false
}

// SetFunctionType gets a reference to the given string and assigns it to the FunctionType field.
func (o *TimeseriesSpecifierFunctions) SetFunctionType(v string) {
	o.FunctionType = &v
}

// GetMathExpression returns the MathExpression field value if set, zero value otherwise.
func (o *TimeseriesSpecifierFunctions) GetMathExpression() TimeseriesSpecifierFunctionsMathExpression {
	if o == nil || IsNil(o.MathExpression) {
		var ret TimeseriesSpecifierFunctionsMathExpression
		return ret
	}
	return *o.MathExpression
}

// GetMathExpressionOk returns a tuple with the MathExpression field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TimeseriesSpecifierFunctions) GetMathExpressionOk() (*TimeseriesSpecifierFunctionsMathExpression, bool) {
	if o == nil || IsNil(o.MathExpression) {
		return nil, false
	}
	return o.MathExpression, true
}

// HasMathExpression returns a boolean if a field has been set.
func (o *TimeseriesSpecifierFunctions) HasMathExpression() bool {
	if o != nil && !IsNil(o.MathExpression) {
		return true
	}

	return false
}

// SetMathExpression gets a reference to the given TimeseriesSpecifierFunctionsMathExpression and assigns it to the MathExpression field.
func (o *TimeseriesSpecifierFunctions) SetMathExpression(v TimeseriesSpecifierFunctionsMathExpression) {
	o.MathExpression = &v
}

func (o TimeseriesSpecifierFunctions) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TimeseriesSpecifierFunctions) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.FunctionType) {
		toSerialize["functionType"] = o.FunctionType
	}
	if !IsNil(o.MathExpression) {
		toSerialize["mathExpression"] = o.MathExpression
	}
	return toSerialize, nil
}

type NullableTimeseriesSpecifierFunctions struct {
	value *TimeseriesSpecifierFunctions
	isSet bool
}

func (v NullableTimeseriesSpecifierFunctions) Get() *TimeseriesSpecifierFunctions {
	return v.value
}

func (v *NullableTimeseriesSpecifierFunctions) Set(val *TimeseriesSpecifierFunctions) {
	v.value = val
	v.isSet = true
}

func (v NullableTimeseriesSpecifierFunctions) IsSet() bool {
	return v.isSet
}

func (v *NullableTimeseriesSpecifierFunctions) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTimeseriesSpecifierFunctions(val *TimeseriesSpecifierFunctions) *NullableTimeseriesSpecifierFunctions {
	return &NullableTimeseriesSpecifierFunctions{value: val, isSet: true}
}

func (v NullableTimeseriesSpecifierFunctions) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTimeseriesSpecifierFunctions) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


